import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;

public class NumberGuessingGame {
    private static final int MIN_RANGE = 1;
    private static final int MAX_RANGE = 100;

    private int targetNumber;
    private int attempts;
    private int score;

    private JFrame frame;
    private JTextField guessField;
    private JLabel feedbackLabel;

    public NumberGuessingGame() {
        Random random = new Random();
        targetNumber = random.nextInt(MAX_RANGE - MIN_RANGE + 1) + MIN_RANGE;
        attempts = 0;
        score = 0;

        frame = new JFrame("Number Guessing Game");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(300, 150);
        frame.setLayout(new BorderLayout());

        guessField = new JTextField(10);
        JButton guessButton = new JButton("Guess");
        feedbackLabel = new JLabel();

        guessButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                handleGuess();
            }
        });

        JPanel inputPanel = new JPanel();
        inputPanel.add(new JLabel("Enter your guess: "));
        inputPanel.add(guessField);
        inputPanel.add(guessButton);

        frame.add(inputPanel, BorderLayout.CENTER);
        frame.add(feedbackLabel, BorderLayout.SOUTH);

        frame.setVisible(true);
    }

    private void handleGuess() {
        try {
            int userGuess = Integer.parseInt(guessField.getText());
            attempts++;

            if (userGuess == targetNumber) {
                feedbackLabel.setText("Congratulations! You guessed it right.");
                score++;
                resetGame();
            } else if (userGuess < targetNumber) {
                feedbackLabel.setText("Too low! Try a higher number.");
            } else {
                feedbackLabel.setText("Too high! Try a lower number.");
            }
        } catch (NumberFormatException ex) {
            feedbackLabel.setText("Invalid input. Enter a valid integer.");
        }
    }

    private void resetGame() {
        Random random = new Random();
        targetNumber = random.nextInt(MAX_RANGE - MIN_RANGE + 1) + MIN_RANGE;
        guessField.setText("");
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new NumberGuessingGame());
    }
}
